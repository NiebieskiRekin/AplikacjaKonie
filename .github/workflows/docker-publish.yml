name: Docker

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
    paths:
      [
        "apps/**",
        "packages/**",
        "package-lock.json",
        "package.json",
        "tsconfig.json",
        "Dockerfile",
        "docker-bake.hcl",
      ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
        with:
          cosign-release: "v2.4.3"

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: NPM Build Cache for Docker
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: build-cache
          key: ${{ runner.os }}-build-cache-${{ hashFiles('package-lock.json') }}

      - name: Inject NPM build cache
        uses: reproducible-containers/buildkit-cache-dance@4b2444fec0c0fb9dbf175a96c094720a692ef810 # v2.1.4
        with:
          cache-source: build-cache

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker images
        id: build-and-push
        uses: docker/bake-action@76f9fa3a758507623da19f6092dc4089a7e61592 # v6
        with:
          source: .
          push: true
          files: docker-bake.hcl
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      - name: List targets
        id: targets-list
        uses: docker/bake-action/subaction/list-targets@23cff4f49a8c757cc17250c5495ec8529db3ad13 # v6
        with:
          target: default

      # Sign the resulting Docker image digest/
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data. If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker images
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          METADATA: ${{ steps.build-and-push.outputs.metadata }}
          TARGETS: ${{ steps.targets-list.outputs.targets }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          export targets=$(jq -r .[] -- <<<"$TARGETS")
          for target in ${targets[@]}; do
            export TAG=$(jq -r ".\"$target\".\"image.name\"" -- <<<$METADATA)
            export DIGEST=$(jq -r ".\"$target\".\"containerimage.digest\"" -- <<<$METADATA)
            cosign sign --yes ${TAG}@${DIGEST}
          done
