services:
  postgres:
    image: postgres:14.16-alpine3.20
    restart: unless-stopped
    user: postgres
    env_file:
      - path: ./backend/.env
        required: true
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DATABASE}
    # ports:
    #   - 5433:5432
    volumes:
      - pg_data_aplikacja_konie:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 15s
      retries: 20
    networks:
      - backend-postgres

  backend:
    build:
      context: ./backend
    ports:
      - 3001:3001
    env_file:
      - path: ./backend/.env
        required: true
    environment:
      DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:5432/${DATABASE_DATABASE}
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    networks:
      - backend-postgres
      - proxy

  frontend:
    build:
      context: ./frontend
    ports:
      - 5173:5733
    depends_on:
      backend:
        condition: service_started
        restart: true
    networks:
      - backend-postgres
      - proxy

networks:
  backend-postgres:
  proxy:

volumes:
  pg_data_aplikacja_konie:
