- name: Deploy database and reverse proxy using docker images
  vars:
    dest: "/opt/AplikacjaKonie/lb-db"
  hosts: main
  tasks:
    - name: Create traefik docker network
      community.docker.docker_network:
        name: traefik

    - name: Create postgres docker network
      community.docker.docker_network:
        name: postgres

    - name: Create project directory
      ansible.builtin.file:
        path: "{{ dest }}"
        state: directory
        mode: "0777"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: true

    - name: Copy create-multiple-postgresql-databases.sh
      ansible.builtin.copy:
        src:  "{{ playbook_dir }}/../postgres/create-multiple-postgresql-databases.sh"
        dest: "{{ dest }}/create-multiple-postgresql-databases.sh"
        mode: "0660"
        owner: "70"
        group: "70"
        force: true
      become: true

    # - name: Copy acquis.yaml
    #   ansible.builtin.copy:
    #     src:  "{{ playbook_dir }}/../crowdsec/acquis.yaml"
    #     dest: "{{ dest }}/acquis.yaml"
    #     mode: "0600"
    #     owner: "{{ ansible_user }}"
    #     group: "{{ ansible_user }}"
    #     force: true
    #   become: true

    - name: Copy docker-compose.yml
      ansible.builtin.copy:
        src:  "{{ playbook_dir }}/../../../docker-compose.lb-db.yml"
        dest: "{{ dest }}/docker-compose.yml"
        mode: "0660"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        force: true
      become: true

    # TODO: Setup versioned secrets object storage in the future
    - name: Setup .env
      ansible.builtin.copy:
        dest: "{{ dest }}/.env"
        content: |
          {{ lookup('env', 'ENV_FILE') }}
        mode: "0600"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: true

    - name: Pull services
      community.docker.docker_compose_v2_pull:
        project_src: "{{ dest }}"

    - name: Start services
      community.docker.docker_compose_v2:
        project_src: "{{ dest }}"
        build: never
        pull: never
        recreate: always

    - name: Cleanup images
      community.docker.docker_prune:
        images: true
        containers: true
        containers_filters:
          # Don't prune containers who have a DONTPRUNE=true label
          # label:
          #   - DONTPRUNE=false

          "label!": DONTPRUNE=true
